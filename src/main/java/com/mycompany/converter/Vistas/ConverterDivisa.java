/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package com.mycompany.converter.Vistas;

import com.google.gson.Gson;
import com.mycompany.converter.Vistas.Entidades.Divisa;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Enumeration;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author martin
 */
public class ConverterDivisa extends javax.swing.JPanel {

    /**
     * Creates new form NewJPanel
     *
     * @throws java.io.IOException
     */
    ArrayList<Divisa> ListaDivisas = new ArrayList<>();

    public ConverterDivisa() throws IOException {
        initComponents();
        //  CargarDatos();
        CargarDivisas();

        CargarComboBoxs();

        CalcularValor();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBDivisaUno = new javax.swing.JComboBox<>();
        jFTValorACalcular = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jTFValorFijo = new javax.swing.JTextField();
        JCBDivisaDos = new javax.swing.JComboBox<>();

        jCBDivisaUno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBDivisaUnoItemStateChanged(evt);
            }
        });
        jCBDivisaUno.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                jCBDivisaUnoPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        jCBDivisaUno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jCBDivisaUnoMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jCBDivisaUnoMouseExited(evt);
            }
        });
        jCBDivisaUno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBDivisaUnoActionPerformed(evt);
            }
        });

        jFTValorACalcular.setText("1");
        jFTValorACalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFTValorACalcularActionPerformed(evt);
            }
        });
        jFTValorACalcular.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jFTValorACalcularPropertyChange(evt);
            }
        });
        jFTValorACalcular.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jFTValorACalcularKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jFTValorACalcularKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jFTValorACalcularKeyTyped(evt);
            }
        });

        jButton1.setText("Invertir Divisa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTFValorFijo.setEnabled(false);

        JCBDivisaDos.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                JCBDivisaDosPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(57, 57, 57)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jTFValorFijo)
                                .addComponent(JCBDivisaDos, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jFTValorACalcular)
                                .addComponent(jCBDivisaUno, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(78, 78, 78)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(50, Short.MAX_VALUE)
                .addComponent(jCBDivisaUno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jFTValorACalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(JCBDivisaDos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTFValorFijo, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(49, 49, 49))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jFTValorACalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFTValorACalcularActionPerformed

    }//GEN-LAST:event_jFTValorACalcularActionPerformed

    private void jCBDivisaUnoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBDivisaUnoMouseClicked

    }//GEN-LAST:event_jCBDivisaUnoMouseClicked

    private void jCBDivisaUnoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jCBDivisaUnoMouseExited

    }//GEN-LAST:event_jCBDivisaUnoMouseExited

    private void jCBDivisaUnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBDivisaUnoActionPerformed
       
    }//GEN-LAST:event_jCBDivisaUnoActionPerformed

    private void jCBDivisaUnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBDivisaUnoItemStateChanged
//                 try {
//            CalcularValor();
//        } catch (IOException ex) {
//            Logger.getLogger(ConverterDivisa.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_jCBDivisaUnoItemStateChanged

    private void jFTValorACalcularPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_jFTValorACalcularPropertyChange

    }//GEN-LAST:event_jFTValorACalcularPropertyChange

    private void jFTValorACalcularKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTValorACalcularKeyPressed

    }//GEN-LAST:event_jFTValorACalcularKeyPressed

    private void jFTValorACalcularKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTValorACalcularKeyTyped
        int key = evt.getKeyChar();

        boolean numeros = key >= 48 && key <= 57;

        if (!numeros) {
            evt.consume();
        }
    }//GEN-LAST:event_jFTValorACalcularKeyTyped

    private void jFTValorACalcularKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jFTValorACalcularKeyReleased

        try {

            CalcularValor();

        } catch (IOException ex) {
            Logger.getLogger(ConverterDivisa.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jFTValorACalcularKeyReleased

    private void jCBDivisaUnoPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_jCBDivisaUnoPopupMenuWillBecomeInvisible
         try {

            CalcularValor();

        } catch (IOException ex) {
            Logger.getLogger(ConverterDivisa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jCBDivisaUnoPopupMenuWillBecomeInvisible

    private void JCBDivisaDosPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_JCBDivisaDosPopupMenuWillBecomeInvisible
        try {

            CalcularValor();

        } catch (IOException ex) {
            Logger.getLogger(ConverterDivisa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_JCBDivisaDosPopupMenuWillBecomeInvisible

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        int aux = jCBDivisaUno.getSelectedIndex();
        
        jCBDivisaUno.setSelectedIndex(JCBDivisaDos.getSelectedIndex());
        
        JCBDivisaDos.setSelectedIndex(aux);
        
          try {

            CalcularValor();

        } catch (IOException ex) {
            Logger.getLogger(ConverterDivisa.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<Divisa> JCBDivisaDos;
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<Divisa> jCBDivisaUno;
    private javax.swing.JTextField jFTValorACalcular;
    private javax.swing.JTextField jTFValorFijo;
    // End of variables declaration//GEN-END:variables

    private void CargarDivisas() throws IOException {

        StringBuilder resultado = new StringBuilder();

        URL url = new URL("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies.json");

        HttpURLConnection conexion = (HttpURLConnection) url.openConnection();
        conexion.setRequestMethod("GET");

        BufferedReader rd = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
        String linea;
        // Mientras el BufferedReader se pueda leer, agregar contenido a resultado
        while ((linea = rd.readLine()) != null) {
            resultado.append(linea);
        }
        // Cerrar el BufferedReader
        rd.close();
        // Regresar resultado, pero como cadena, no como StringBuilder

        final Gson gson = new Gson();
        final Properties properties = gson.fromJson(resultado.toString(), Properties.class);

        Enumeration e = properties.propertyNames();

        while (e.hasMoreElements()) {

            String key = (String) e.nextElement();
            String value = (String) properties.getProperty(key);

            if (!value.isEmpty()) {

                ListaDivisas.add(new Divisa(value, key));
            }

        }
        Collections.sort(ListaDivisas);

    }

    private void CargarComboBoxs() {

        for (Divisa item : ListaDivisas) {

            jCBDivisaUno.addItem(item);
            JCBDivisaDos.addItem(item);
        }

    }

    private void CalcularValor() throws IOException {

        StringBuilder resultado = new StringBuilder();

        String DivisaUno = ((Divisa) jCBDivisaUno.getSelectedItem()).getISO();
        String DivisaDos = ((Divisa) JCBDivisaDos.getSelectedItem()).getISO();

        URL url = new URL("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/" + DivisaUno + "/" + DivisaDos + ".json");

        HttpURLConnection conexion = (HttpURLConnection) url.openConnection();
        conexion.setRequestMethod("GET");

        BufferedReader rd = new BufferedReader(new InputStreamReader(conexion.getInputStream()));
        String linea;
        // Mientras el BufferedReader se pueda leer, agregar contenido a resultado
        while ((linea = rd.readLine()) != null) {
            resultado.append(linea);
        }
        // Cerrar el BufferedReader
        rd.close();

        //  System.out.println(resultado);
        // Regresar resultado, pero como cadena, no como StringBuilder
        final Gson gson = new Gson();
        final Properties properties = gson.fromJson(resultado.toString(), Properties.class);

        Enumeration e = properties.propertyNames();

        while (e.hasMoreElements()) {

            String key = (String) e.nextElement();
            String value = (String) properties.getProperty(key);
//
//            System.out.println(key);
//            System.out.println(value);

            if (key.equals(DivisaDos) && jFTValorACalcular.getText().length() > 0) {

                jTFValorFijo.setText(String.format("%.2f", (Double.parseDouble(value) * Double.parseDouble(jFTValorACalcular.getText()))));
            }
        }

    }

}
